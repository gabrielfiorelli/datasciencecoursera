x <- 1
print(x)
x
runif()
runif(10)
x <- 1:4
lapply(x, runif)
lapply(x, runif, min = 0, max = 10)
> x <- list(a = 1:5, b = rnorm(10))
x <- list(a = 1:5, b = rnorm(10))
sapply(x, mean)
str(apply)
x <- matrix(rnorm(200)), 20, 10)
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
apply(x, 1, sum)
x
x <- matrix(rnorm(200, 1, 10))
x
x <- matrix(rnorm(200, 1, 10, 5))
x <- matrix(rnorm(200, 0, 10))
x
x <- matrix(rnorm(200, min = 0, max = 10))
x
x <- matrix(runf(200, min = 0, max = 10), 20, 10)
x <- matrix(runif(200, min = 0, max = 10), 20, 10)
x
x <- matrix(floor(runif(200, min = 0, max = 10)), 20, 10)
x
hist(x)
hist(x[, 1])
hist(x[1,])
apply(x, 1, quantile, probs = c(0.25, 0.75))
str(quantile)
args('quantile')
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapply(x, f, mean)
tapply(x, f, range)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
f <- gl(3, 10)
split(x, f)
lapply(split(x, f), mean)
library(datasets)
head(airquality)
airquality
library(datasets)
head(airquality)
datasets
?datasets
library(help = "datasets")
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
s
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x(, c("Ozone", "Solar.R", "Wind"))))
lapply(s, function(x) colMeans(x[], c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm=TRUE))
x <- rnorm(10)
f1 <- gl(2, 5)
f2 <- gl(5,2)
f1
f2
interactions(f1, f2)
interaction(f1, f2)
str(split(x, list(f1, f2)))
mean(z)
traceback()
debug(lm)
lm(y - x)
n
options(error = recover)
read.csv("lalala.csv")
library(datasets)
data("iris")
>iris
?iris
x <- data("iris")
x
x <- data(iris)
x
library(datasets)
iris <- data(iris)
iris
dnis <- dimnames(iris)
dnis
library(datasets)
iris <- data(iris)
head(iris)
library(datasets)
data(iris)
x <- data(iris)
q()
str(str)
source("cachematrix.T")
source("cachematrix.R")
str(lm)
str(source)
x <- rnorm(100, 2, 4)
summary(x)
str(x)
f <- gl(40, 20)
str(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
s <- split(airquality, airquality$Month)
str(s)
summary(s)
x <- rnorm(10, 2, 1)
x
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na])
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3. 5. 7)]
x[c(3. 5. 7)]
x[3]
k <- c(3, 5, 7)
x[k]
x[c(3, 5 ,7)]
X[0]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
install.packages("RMySQL")
library("RMySQL")
ucscDB <- dbConnect(MySQL(), user="genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDB, "show databases;", dbDisconnect(ucscDB))
result <- dbGetQuery(ucscDB, "show databases;"; dbDisconnect(ucscDB));
result <- dbGetQuery(ucscDB, "show databases;"); dbDisconnect(ucscDB);
ucscDB <- dbConnect(MySQL(), user="genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDB, "show databases;"); dbDisconnect(ucscDB);
result
ucscDB <- dbConnect(MySQL(), user="root", host = "localhost")
ucscDB <- dbConnect(MySQL(), user="root", password = "12345", host = "localhost")
result <- dbGetQuery(ucscDB, "show databases;"); dbDisconnect(ucscDB);
result
ucscDB <- dbConnect(MySQL(), user="genome", db="hg19", host = "genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(), user="root", password = "12345", host = "localhost")
alLTables <- dbListTables(hg19)
ucscDB <- dbConnect(MySQL(), user="genome", db="hg19", host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2")
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host = "genome-mysql.cse.ucsc.edu")
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(1) from affyU133plus2")
dbGetQuery(hg19, "select count(1) from affyU133Plus2")
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host = "genome-mysql.cse.ucsc.edu")
affyData <- dbReadTable(hg19, "affyU133Plus2")
warnings()
head(affyData)
dataBase <- dbConnect(MySQL(), user="root", db="hoplon_dw_hmm", host = "localhost")
dataBase <- dbConnect(MySQL(), user="root", password = "12345", db="hoplon_dw_hmm", host = "localhost")
tableData <- dbReadTable(dataBase, "installerfunnel_tableau")
head(tableData)
dataBase <- dbConnect(MySQL(), user="root", db="hoplon_dw_hmm", host = "localhost")
dataBase <- dbConnect(MySQL(), user="root", password = "12345", db="hoplon_dw_hmm", host = "localhost")
dataBase <- dbConnect(MySQL(), user="root", password = "12345", db="hoplon_dw_hmm", host = "localhost")
tableData <- dbReadTable(dataBase, "userevents_digest_dailyactiveusers")
head(tableData)
query <- dbSendQuery(dataBase, "select * from userevents_digest_dailyactiveusers where LoginDate >= '2017-01-31'")
result <- fetch(query)
quantile(result$DailyUsers)
median(result$DailyUsers)
teste <- fetch(query, n=10)
dim(teste)
plot(query)
summary(query)
plot(query$)
plot(query$LoginDate, query$DailyUsers)
plot(result$LoginDate, result$DailyUsers)
plot(resulresult$DailyUsers)
plot(result$DailyUsers)
hist(result$DailyUsers)
summary(result)
dbDisconnect(dataBase)
source("http://bioconductor.org/biocLite.R")
library(rhdf5)
biocLite("rhdf5")
library(rhdf5)
created <- h5createFile("example.h5")
getwd()
setwd("..\\")
getwd()
list.files()
setwd("\\datasciencecoursera"
)
setwd("datasciencecoursera")
list.files()
dir.create("Course03Week02")
list.files()
setwd("Course03Week02")
getwd()
created <- h5createFile("example.h5")
list.files()
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr= 5, nc=2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1, 2.0, by=0.1)m dim=c(5,2,2))
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
readA <- h5read("example.h5", "foo/A")
readA
readB <- h5read("example.h5", "foo/foobaa/B")
readB
con <- url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ")
htmlCode <- readLines(con)
close(con)
htmlCode
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ"
html <- htmlTreeParse(url, useInternalNodes = TRUE)
xpathSApply(html, "//title", xmlValue)
library(httr)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ"
html2 <- GET(url )
library(httr)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ"
html2 <- GET(url )
content2 <- content(html2, as="text")
parsedHtml <- htmlParse(content2, asText=TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
myapp <- oauth_app("github", key="394b377ea2de0e1c5dda", secret="8b1130e79df4361e0a4112c647082aa5a8d47ff4")
gitToken <- oauth2.0_token(oauth_endpoints("github"), myapp)
gitToken <- oauth2.0_token(oauth_endpoints("github"), myapp)
gitToken <- oauth2.0_token(oauth_endpoints("github"), myapp)
gitToken <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", key="394b377ea2de0e1c5dda", secret="8b1130e79df4361e0a4112c647082aa5a8d47ff4", redirect_uri = "http://127.0.0.1:3000/restrict")
gitToken <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", key="394b377ea2de0e1c5dda", secret="8b1130e79df4361e0a4112c647082aa5a8d47ff4", redirect_uri = "http://192.168.15.6:3000/restrict")
gitToken <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(sqldf)
install.packages(sqlsd)
install.packages(sqldf)
install.packages("sqldf")
fname <- "survey.csv"
download_if_not_exists(fname, "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv(fname, header = TRUE, sep = ",")
head(acs)
answer2 <- sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
answer2 <- sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- read.csv(fname, header = TRUE, sep = ",")
answer2 <- sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
acs <- read.csv(fname, header = TRUE, sep = ",")
fi <- file(acs)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
readLines(url)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
urlData <- readLines(url)
nchar(urlData[100])
nchar(urlData[30])
nchar(urlData[20])
nchar(urlData[10])
nchar(urlData[40])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "acs_wk2.csv")
acs <- read.csv("./data/acs_wk2.csv")
acs <- read.csv("acs_wk2.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
> detach(package:RMySQL)
> detach(package:sqldf)
> library(sqldf)
detach(package:RMySQL)
detach(package:sqldf)
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
detach(package:RMySQL)
detach(package:sqldf)
library(sqldf)
sqldf("select distinct AGEP from acs")
sqldf("select AGEP where unique from acs")
sqldf("select unique * from acs")
sqldf("select distinct pwgtp1 from acs")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, destfile = "ac_survey.csv")
?read.fwf
q5_df <- read.fwf(file = "./data/q5_data.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
head(q5_df)
q5_df <- read.fwf(file = "q5_data.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
head(q5_df)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, destfile = "ac_survey.csv")
?read.fwf
q5_df <- read.fwf(file = "ac_survey.csv", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
head(q5_df)
sum(q5_df$V6)

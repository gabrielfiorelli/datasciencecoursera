restData$zipGroups <- cut2(restData$zipCode, g = 4)
library(Hmisc)
restData$zipGroups <- cut2(restData$zipCode, g = 4)
table(restData$zipGroups)
library(Hmisc)
library(plyr)
restData
library(plyr)
library(Hmisc)
restData2 <- mutate(restData, zipGroups=cut2(zipCode, g=4))
table(restData2$zipGroups)
library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
mtcars$carname
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars = c("mpg", "hp"))
head(carMelt, n = 3)
tail(carMelt, n = 3)
table(carMelt)
carMelt
head(mtCars)
head(mtCar)
head(mtcar)
head(mtcars)
cylData <- dcast(carMelt, cyl ~ variable)
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spIns <- split(InsectSprays$count, InsectSprays$spray)
spIns
sprCount <- lapply(spIns, sum)
sprCount
lapply(split(InsectSprays$count, InsectSprays$spray), sum)
unlist(lapply(split(InsectSprays$count, InsectSprays$spray), sum))
sapply(split(InsectSprays$count, InsectSprays$spray), sum)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
spraySums <- ddply(InsectSprays, .(spray), summarize, sum=ave(count, FUN=sum))
dim(spraySums)
head(spraySums)
load("C:/Users/gabriel.fiorelli/datasciencecoursera/Course03Week03/data/.RData")
chicTemp <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
library(plyr)
chicTemp <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
columnNames <- names(chicago)
columnNames
chicTemp <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
chicTemp <- filter(chicago, tmpd > 80)
library(dplyr)
chicTemp <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
head(chicTemp, 2)
library(dplyr)
chicago <- arrange(chicago, date)
head(chicago, 10)
chicago <- arrange(chicago, desc(date))
head(chicago, 10)
chicago <- rename(chicago, pm25 = pm25tmean2, dewpoint = dptp)
head(chicago, 5)
chicago <- mutate(chicago, pm25detrend = pm25-mean(pm25, na.rm = TRUE))
head(chicago, 5)
chicago <- mutate(chicago, pm25detrend = pm25 - mean(pm25, na.rm = TRUE))
#Basicamente criou um desvio do valor em relação a média destes valores.
head(select(chicago, pm25, pm25detrend))
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
?n
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit
submit()
d1 = date()
d
d1
d1 <- date()
d1
class(d1)
d1 <- Sys.Date()
d1 <- date()
d1
class(d1)
d2 <- Sys.Date()
d2
class(d2)
format(d2, "%a %b %d")
#Funciona com todas as funções de visualização de datas
#Transformar strings em datas:
x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960"); z <- as.Date(x, "%d%b%Y")
z
#Verificar diferença de tempo entre datas:
z[1] - z[2]
as.numeric(z[1] - z[2])
weekdays(d2)
weekdays(z)
months(d2)
months(z)
library(lubridate)
install.packages("lubridate")
library(lubridate)
ymd("20170108")
ymd("20170108") #YearMonthDate
mdy("20170108") #MonthDayYear
ymd("20170108") #YearMonthDate
mdY("08/04/2017")
mdy("08/04/2017")
dmy("03-04-2017")
d = "2011-08-03 10:10:10"
ymd_hms(d)
ymd_hms(d, tz=)
ymd_hms(d, tz="Pacific/Auckland")
x <- dmy(c("1jan1960", "2jan1960", "31mar1960", "30jul1960"))
wday(x[1])
x <- dmy(c("1jan2013", "2jan2013", "31mar2013", "30jul2013"))
wday(x[1])
wday(x[1], label = TRUE)
swirl()
library(swirl)
swirl()
library(dataset)
par(mfrow = c(1, 2))
with(airquality,
{
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
}
)
library(datasets)
par(mfrow = c(1, 2))
with(airquality,
{
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
}
)
library(datasets)
with(airquality,
{
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City, outer = true")
}
)
library(datasets)
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality,
{
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City, outer = true")
}
)
library(datasets)
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality,
{
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City, outer = TRUE")
}
)
library(datasets)
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality,
{
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
}
)
x <- rnorm(100)
hist(x)
y <- rnotm(100)
y <- rnorm(100)
plot(x, y)
par(mar(2, 2, 2, 2))
par(mar = C(2, 2, 2, 2))
par(mar = c(2, 2, 2, 2))
plot(x, y)
par(mar = c(4, 4, 2, 2))
plot(x, y)
plot(x, y, pch = 20)
example(points)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
library(Swirl)
library(swirl)
swirl()
head(airpolution)
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, color = 'blue')
boxplot(ppm, color = "blue")
boxplot(ppm, col = "blue")
library(swirl)
library(swirl)
swirl()
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
rug(low)
hist(low)
hist(low); rug(low)
hist(ppm, col = "green")
rug(low)
info()
low
high
hist(ppm, col = "green", breaks = 100)
library(swirl)
swirl()
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
pollution
names(pollution)
reg = pollution$region
reg <- pollution$region
reg <- table(pollution$region)
reg
library(swirl)
swirl()
barplot(reg, col = "wheat", main = ""Number of Counties in Each Region"")
barplot(reg, col = "wheat", main = Number of Counties in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = "pollution", col = "red")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region = "west")$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(v = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, pollution$pm25, col = pollution$region
)
plot(pollution$latitude, ppm, col = pollution$region
)
abline(h = 12, lwd =2, lty =2)
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == 'west')
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
library(swirl)
swirl()
head(mpg)
dim(mpg)
with(mpg, table(model))
table(mpg$model)
qplot(displ, hwy, data = "mpg")
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in
| New York City")
title(main = "Ozone and Wind in New York City")
par(length())
length(par())
names(par())
?para
?par
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month = 5)
may <- subset(airquality, Month == 5)
points()
points(may$Wind, may$Ozone, pch =  3, col = "solid blue")
points(may$Wind, may$Ozone, pch =  3, col = "blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", c(17, 8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
line(median(airquality$Wind), lty = 2, lwd = 2)
lines(median(airquality$Wind), lty = 2, lwd = 2)
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R,  main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R,  main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
library(lattice)
library(datasets)
airquality <- transform(airquality)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(3,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
storedGraphic <- xyplot(Ozone ~ Wind, data = airq)
storedGraphic <- xyplot(Ozone ~ Wind, data = airquality)
print(storedGraphic)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group_1", "Group_2"))
xyplot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, panel = function(x, y, ...){})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.abline(h = meadian(y), lty = 2)
})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group_1", "Group_2"))
xyplot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, panel = function(x, y, ...){
+     panel.xyplot(x, y, ...)
+     panel.abline(h = median(y), lty = 2)
+ })
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group_1", "Group_2"))
xyplot(y ~ x | f, layout = c(2,1))
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group_1", "Group_2"))
xyplot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
xyplot(y ~ x | f, layout = c(2,1), panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group_1", "Group_2"))
xyplot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, layout = c(2,1), panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
library(ggplot2)
str(mpg)
library(ggplot2)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = dr)
qplot(displ, hwy, data = mpg, color = drv)
rm(list = ls())
library(ggplot2)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, why, data = mpg, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, fill = drv, binwidth = 20)
qplot(hwy, data = mpg, fill = drv, binwidth = 30)
qplot(hwy, data = mpg, fill = drv, binwidth = 3)
qplot(hwy, data = mpg, fill = drv, binwidth = 1)
qplot(hwy, data = mpg, fill = drv)
stat_bin()
cutpoints <- quantile(maacs$logno2_new, seq(0, 1, length = 4), na.rm = TRUE)
# Cut the data at the deciles and create a new factor variable
maacs$no2dec <- cut(maacs$logno2_new, cutpoints)
# See the levels of the newly created factor variable
levels(maacs$no2dec)
# Acima os levels foram encaixados de acordo com os deciles definidos, se simplesmente fosse criado um fator (dimensão) baseado na variável, o resultado seria uma quantidade de N fatores, cada um representando um valor, o que geraria também uma quantia de N gráficos:
maacs$no2dec2 <- factor(maacs$logno2_new)
levels(maacs$no2dec2)
setwd("C:/Users/gabriel.fiorelli/datasciencecoursera/Course04Week01 - Exploratory Data Analysis")
setwd("C:/Users/gabriel.fiorelli/datasciencecoursera/Course04Week02")
load("./maacs.Rda")
library(ggplot2)
cutpoints <- quantile(maacs$logno2_new, seq(0, 1, length = 4), na.rm = TRUE)
# Cut the data at the deciles and create a new factor variable
maacs$no2dec <- cut(maacs$logno2_new, cutpoints)
# See the levels of the newly created factor variable
levels(maacs$no2dec)
# Acima os levels foram encaixados de acordo com os deciles definidos, se simplesmente fosse criado um fator (dimensão) baseado na variável, o resultado seria uma quantidade de N fatores, cada um representando um valor, o que geraria também uma quantia de N gráficos:
maacs$no2dec2 <- factor(maacs$logno2_new)
levels(maacs$no2dec2)
## Setup ggplot with data frame
g <- ggplot(maacs, aes(logpm25, NocturnalSympt))
## Add layers
g + geom_point(alpha = 1/3)
+ facet_wrap(bmicat ~ no2dec, nrow = 2, ncol = 4)
+ geom_smooth(method = "lm", se = FALSE, col = "steelblue")
+ theme_bw(base_family = "Avenir", base_size = 10)
+ labs(x = expression("log " * PM[2.5]))
+ labs(y = "Nocturnal Symptoms")
+ labs(title = "MAACS Cohort")
g + geom_point(alpha = 1/3)
+ facet_wrap(bmicat ~ no2dec, nrow = 2, ncol = 4)
+ geom_smooth(method = "lm", se = FALSE, col = "steelblue")
+ theme_bw(base_family = "Avenir", base_size = 10)
+ labs(x = expression("log " * PM[2.5]))
+ labs(y = "Nocturnal Symptoms")
+ labs(title = "MAACS Cohort")
g + geom_point(alpha = 1/3)
+ facet_wrap(bmicat ~ no2dec, nrow = 2, ncol = 4)
no2dec
g <- ggplot(maacs, aes(logpm25, NocturnalSympt))
g + geom_point(alpha = 1/3)
+ facet_wrap(bmicat ~ no2dec, nrow = 2, ncol = 4)
g + geom_point(alpha = 1/3)
g + geom_point(alpha = 1/3)
+ facet_wrap(maacs$bmicat ~ maacs$no2dec, nrow = 2, ncol = 4)
maacs$no2dec
g + geom_point(alpha = 1/3)
+ facet_wrap(bmicat ~ no2dec)
g + geom_point(alpha = 1/3)
+ facet_wrap(bmicat ~ no2dec, nrow = 2)
g + geom_point(alpha = 1/3) + facet_wrap(bmicat ~ no2dec, nrow = 2) +
+        geom_smooth(method='lm', se=FALSE, col='steelblue') +
+        theme_bw(base_family = 'Avenir', base_size = 10) +
+        labs(x = expression('log ' * PM[2.5])) +
+        labs(y = 'Nocturnal Symptoms') +
+        labs(title = 'MAACS Cohort')
g + geom_point(alpha = 1/3) + facet_wrap(bmicat ~ no2dec, nrow = 2) +
geom_smooth(method='lm', se=FALSE, col='steelblue') +
theme_bw(base_family = 'Avenir', base_size = 10) +
labs(x = expression('log ' * PM[2.5])) +
labs(y = 'Nocturnal Symptoms') +
labs(title = 'MAACS Cohort')
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
library(movies)
datasets(movies)

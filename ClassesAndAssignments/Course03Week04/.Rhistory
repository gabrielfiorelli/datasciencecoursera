x <- 1
print(x)
x
runif()
runif(10)
x <- 1:4
lapply(x, runif)
lapply(x, runif, min = 0, max = 10)
> x <- list(a = 1:5, b = rnorm(10))
x <- list(a = 1:5, b = rnorm(10))
sapply(x, mean)
str(apply)
x <- matrix(rnorm(200)), 20, 10)
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
apply(x, 1, sum)
x
x <- matrix(rnorm(200, 1, 10))
x
x <- matrix(rnorm(200, 1, 10, 5))
x <- matrix(rnorm(200, 0, 10))
x
x <- matrix(rnorm(200, min = 0, max = 10))
x
x <- matrix(runf(200, min = 0, max = 10), 20, 10)
x <- matrix(runif(200, min = 0, max = 10), 20, 10)
x
x <- matrix(floor(runif(200, min = 0, max = 10)), 20, 10)
x
hist(x)
hist(x[, 1])
hist(x[1,])
apply(x, 1, quantile, probs = c(0.25, 0.75))
str(quantile)
args('quantile')
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapply(x, f, mean)
tapply(x, f, range)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
f <- gl(3, 10)
split(x, f)
lapply(split(x, f), mean)
library(datasets)
head(airquality)
airquality
library(datasets)
head(airquality)
datasets
?datasets
library(help = "datasets")
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
s
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x(, c("Ozone", "Solar.R", "Wind"))))
lapply(s, function(x) colMeans(x[], c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm=TRUE))
x <- rnorm(10)
f1 <- gl(2, 5)
f2 <- gl(5,2)
f1
f2
interactions(f1, f2)
interaction(f1, f2)
str(split(x, list(f1, f2)))
mean(z)
traceback()
debug(lm)
lm(y - x)
n
options(error = recover)
read.csv("lalala.csv")
library(datasets)
data("iris")
>iris
?iris
x <- data("iris")
x
x <- data(iris)
x
library(datasets)
iris <- data(iris)
iris
dnis <- dimnames(iris)
dnis
library(datasets)
iris <- data(iris)
head(iris)
library(datasets)
data(iris)
x <- data(iris)
q()
str(str)
source("cachematrix.T")
source("cachematrix.R")
str(lm)
str(source)
x <- rnorm(100, 2, 4)
summary(x)
str(x)
f <- gl(40, 20)
str(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
s <- split(airquality, airquality$Month)
str(s)
summary(s)
x <- rnorm(10, 2, 1)
x
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na])
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3. 5. 7)]
x[c(3. 5. 7)]
x[3]
k <- c(3, 5, 7)
x[k]
x[c(3, 5 ,7)]
X[0]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
load("C:/Users/gabriel.fiorelli/datasciencecoursera/Course03Week03/.RData")
restData
restData$nearMe <- restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearMe)
restData$zipGroups <- cut(restData$zipCode, breaks = quantile(restData$zipCode))
table(restData$zipGroups)
table(restData$zipGroups)
table(restData$zipGroups, restData$
table(restData$zipGroups, restData$zipCode)
library(Hmisc)
download.packages(Hmisc)
download.packages("Hmisc)"
download.packages("Hmisc")
install.packages("Hmisc")
library(Hmisc)
RESdATA
restData$zipGroups = cut2(restData$zipCode, g=10)
table(restData$zipGroups)
ftable(restData$zipGroups)
ftable(restData$zipGroups)
table(restData$zipGroups)
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode, g=4)
table(restData$zipGroups)
ftable(restData$zipGroups)
restData$zipCodeFactors <- factor(restData$zipCode)
restData$zipCodeFactors[1:10]
class(restData$zipCodeFactors)
class(restData$zipCodeFactors)
as.numeric(restData$zipCodeFactors)
as.numeric(head(restData$zipCodeFactors))
restData$zipGroups <- cut2(restData$zipCode, g = 4)
library(Hmisc)
restData$zipGroups <- cut2(restData$zipCode, g = 4)
table(restData$zipGroups)
library(Hmisc)
library(plyr)
restData
library(plyr)
library(Hmisc)
restData2 <- mutate(restData, zipGroups=cut2(zipCode, g=4))
table(restData2$zipGroups)
library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
mtcars$carname
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars = c("mpg", "hp"))
head(carMelt, n = 3)
tail(carMelt, n = 3)
table(carMelt)
carMelt
head(mtCars)
head(mtCar)
head(mtcar)
head(mtcars)
cylData <- dcast(carMelt, cyl ~ variable)
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spIns <- split(InsectSprays$count, InsectSprays$spray)
spIns
sprCount <- lapply(spIns, sum)
sprCount
lapply(split(InsectSprays$count, InsectSprays$spray), sum)
unlist(lapply(split(InsectSprays$count, InsectSprays$spray), sum))
sapply(split(InsectSprays$count, InsectSprays$spray), sum)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
spraySums <- ddply(InsectSprays, .(spray), summarize, sum=ave(count, FUN=sum))
dim(spraySums)
head(spraySums)
load("C:/Users/gabriel.fiorelli/datasciencecoursera/Course03Week03/data/.RData")
chicTemp <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
library(plyr)
chicTemp <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
columnNames <- names(chicago)
columnNames
chicTemp <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
chicTemp <- filter(chicago, tmpd > 80)
library(dplyr)
chicTemp <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
head(chicTemp, 2)
library(dplyr)
chicago <- arrange(chicago, date)
head(chicago, 10)
chicago <- arrange(chicago, desc(date))
head(chicago, 10)
chicago <- rename(chicago, pm25 = pm25tmean2, dewpoint = dptp)
head(chicago, 5)
chicago <- mutate(chicago, pm25detrend = pm25-mean(pm25, na.rm = TRUE))
head(chicago, 5)
chicago <- mutate(chicago, pm25detrend = pm25 - mean(pm25, na.rm = TRUE))
#Basicamente criou um desvio do valor em relação a média destes valores.
head(select(chicago, pm25, pm25detrend))
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
?n
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit
submit()
getwd()
setwd(..)
setwd("..")
setwd("datasciencecoursera")
list.files()
dir.create("Course03Week04")
setwd("Course03Week04/")
getwd()
if(!file.exists("data/")) { dir.create("data")}
list.files()
read.csv("data/cameras.csv")
cameraData <- read.csv("data/cameras.csv")
View(cameraData)
names(cameraData)
tolower(names(cameraData))
splitNames <- strsplit(names(cameraData), "\\.")
splitNames[[5]]
splitNames[[6]]
solutions <- read.csv("data/solu
solutions <- read.csv("data/solutions.csv")
reviews <- read.csv("data/reviews.csv")
head(solutions, 2)
solutions <- read.csv("data/solutions2.csv")
head(solutions, 2)
reviews <- read.csv("data/reviews.csv")
solutions <- read.csv("data/solutions.csv")
head(solutions, 2)
head(reviews, 2)
sub("_", "", names(reviews), )
grep("Alameda", cameraData$intersection)
table(grepl("Alameda", cameraData$intersection))
cameraData2 <- cameraData[!grepl("Alameda", cameraData$intersection), ]
head(cameraData2)

x <- 1
print(x)
x
runif()
runif(10)
x <- 1:4
lapply(x, runif)
lapply(x, runif, min = 0, max = 10)
> x <- list(a = 1:5, b = rnorm(10))
x <- list(a = 1:5, b = rnorm(10))
sapply(x, mean)
str(apply)
x <- matrix(rnorm(200)), 20, 10)
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
apply(x, 1, sum)
x
x <- matrix(rnorm(200, 1, 10))
x
x <- matrix(rnorm(200, 1, 10, 5))
x <- matrix(rnorm(200, 0, 10))
x
x <- matrix(rnorm(200, min = 0, max = 10))
x
x <- matrix(runf(200, min = 0, max = 10), 20, 10)
x <- matrix(runif(200, min = 0, max = 10), 20, 10)
x
x <- matrix(floor(runif(200, min = 0, max = 10)), 20, 10)
x
hist(x)
hist(x[, 1])
hist(x[1,])
apply(x, 1, quantile, probs = c(0.25, 0.75))
str(quantile)
args('quantile')
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapply(x, f, mean)
tapply(x, f, range)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
f <- gl(3, 10)
split(x, f)
lapply(split(x, f), mean)
library(datasets)
head(airquality)
airquality
library(datasets)
head(airquality)
datasets
?datasets
library(help = "datasets")
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
s
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x(, c("Ozone", "Solar.R", "Wind"))))
lapply(s, function(x) colMeans(x[], c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm=TRUE))
x <- rnorm(10)
f1 <- gl(2, 5)
f2 <- gl(5,2)
f1
f2
interactions(f1, f2)
interaction(f1, f2)
str(split(x, list(f1, f2)))
mean(z)
traceback()
debug(lm)
lm(y - x)
n
options(error = recover)
read.csv("lalala.csv")
library(datasets)
data("iris")
>iris
?iris
x <- data("iris")
x
x <- data(iris)
x
library(datasets)
iris <- data(iris)
iris
dnis <- dimnames(iris)
dnis
library(datasets)
iris <- data(iris)
head(iris)
library(datasets)
data(iris)
x <- data(iris)
q()
str(str)
source("cachematrix.T")
source("cachematrix.R")
str(lm)
str(source)
x <- rnorm(100, 2, 4)
summary(x)
str(x)
f <- gl(40, 20)
str(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
s <- split(airquality, airquality$Month)
str(s)
summary(s)
x <- rnorm(10, 2, 1)
x
dnorm(10, mean = 0, sd = 1, log=FALSE)
dnorm(1, mean = 0, sd = 1, log=FALSE)
clear
rnom(10, 1, 2,)
rnom(10, 1, 2)
rnorm(10, 1, 2)
x < = rnorm(10, 10, 2)
x <- rnorm(10, 10, 2)
x
summary(10)
x <- rnorm(10, 10, 5)
x
summary(10)
set.seed(1)
x <- rnorm(100, 10, 5)
hist(x0)
hist(x)
hist(x, 10)
x <- rnorm(100, 10, 5)
summary(10)
x
hist(x)
x <- rpois(100, 10, 5)
x <- rpois(100, 10)
x
hist(x, 10)
summary(x)
ppois(2, 2)
ppois(-2, 2)
ppois(1), 2)
ppois(1, 2)
ppois(0.1, 2)
ppois(4, 2)
set.seed(20)
x <- rnorm(100, 0, 2)
y <- rnorm(100)
y <- 0.5 + 2 * y * x
summary(y)
set.seed(20)
x <- rnorm(100, 0, 2)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x * e
summary(y)
plot(x, y)
hist(x, y)
hist(y)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
plot(x, y)
hist(y)
summary(y)
set.seed(20)
x <- rbinom(100, 1, 0.5) #Gera binários, sendo que a chance de cair 1 é de 50%
y <- rnorm(100, 0, 2)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
set.seed(10)
x <- rbinom(100, 1, 0.5) #Gera binários, sendo que a chance de cair 1 é de 50%
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
B0 <- 0.5
B1 <- 0.3
set.seed(1)
x <- rnorm(100)
log.mu <- B0 + B1 * x
y <- rpois(100, exp(log.mu))
summary(y)
plot(x, y)
hist(log.mu)
plot(x, y)
set.seed(2)
set.seed(1)
sample(1:10, 4)
sample(1:10, 4)
sample(letters, 5)
sample(1:10) ##permutations
sample(1:10) ##permutations
sample(1:10, replace = TRUE)
x <- 1:10
x
sample(x, 3)
sample(x, 3)
## Elapsed time > User time
system.time(readLines("http://www.jjhsph.edu"))
system.time(readLines("http://www.globo.com"))
## Elapsed time < User time
hilbert <- function(n){}
hilbert <- function(n){
1 <- 1:n
1 / outer(i -1, i, "+")
}
x <- hilbert(1000)
hilbert <- function(n){
1 <- 1:n
1 / outer(i - 1, i, "+")
}
x <- hilbert(1000)
hilbert <- function(n){
i <- 1:n
1 / outer(i - 1, i, "+")
}
x <- hilbert(1000)
system.time(svd(x))
rprof(lm(x, y))
Rprof(lm(x, y))
Rprof(lm(x ~ y))
tmp <- tempfile()
Rprof(tmp)
example(glm)
Rprof(NULL)
profile <- as.data.frame(summaryRprof(tmp)$by.total)
unlink(tmp)
result <- cbind("function"=rownames(profile), profile)
result
set.seed
set.seed(1)
rpois(5,2)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
setwd("C:\\Users\\gabriel.fiorelli\\datasciencecoursera\\ProgrammingAssignment3")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
setwd("C:\\Users\\gabriel.fiorelli\\datasciencecoursera\\ProgrammingAssignment3")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
ncol(outcome)
nrow(outcome)
names(outcome)
setwd("C:\\Users\\gabriel.fiorelli\\datasciencecoursera\\ProgrammingAssignment3")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
ncol(outcome)
nrow(outcome)
#names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
best("SC", "heart attack")
outcome$Hospital.Name
s <- 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack'
outcome$S
outcome$heart.attach
outcome$heart.attack
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack"
)
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
names(outcome)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data[,index] <- suppressWarnings(as.numeric(data[,index]))
data[,index] <- suppressWarnings(as.numeric(data[,11]))
data[,11] <- suppressWarnings(as.numeric(data[,11]))
data <- na.omit(data)
head(data[,11])
head(data[,2])
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_arr <- sort(unique(data$State))
state_arr
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
hospital
state_subset <- data[data[, 7]==state_arr[1], ]
state_subset
data[, 7]
stateSubset <- data[data$State==state_arr[i], ]
state_arr[i]
state_arr[1]
data$State
data[data$State == state_arr[1]]
data[, 7]==state_arr[1]
state_subset
outcome_arr <- as.numeric(state_subset[, 11])
outcome_arr
data.sorted[,7]
data[,7]
state_hospital_data <- function(state) {
slice <- subset(data.sorted, State==state)
slice <- slice[num, c(2,7,index)]
slice$State <- state
return (slice)
}
data.sorted <- data[order(data[,11], data[,2], na.last=TRUE),]
data.sorted <- data.sorted[!is.na(data.sorted[,11]),]
stateInitialsColumn <- 7
states <- sort(unique(data.sorted[,stateInitialsColumn]))
state_data <- lapply(states, state_hospital_data)
state_hospital_data <- function(data.sorted, state, index) {
slice <- subset(data.sorted, State==state)
slice <- slice[num, c(2,7,index)]
slice$State <- state
return (slice)
}
View(state_hospital_data)
state_data <- lapply(states, state_hospital_data, 11)
state_hospital_data <- function(state, data.sorted, index) {
slice <- subset(data.sorted, State==state)
slice <- slice[num, c(2,7,index)]
slice$State <- state
return (slice)
}
state_data <- lapply(states, state_hospital_data, 11)
state_subset <- data[data[, 7]==state_arr[], ]
state_subset <- data[data[, 7]==state_arr[1], ]
state_subset
stateColumn <- 7
data[, stateColumn]
source("rankall.R")
head(rankall("heart attack", 20), 10)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data = data[,c(2, 7, 11, 17, 23)]
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
source("rankall.R")
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
index <- 23
data[,index] <- suppressWarnings(as.numeric(data[,index]))
data <- data[!is.na(data[,index]),]
data.sorted <- data[order(data[,index], data[,2], na.last=TRUE),]
data.sorte
data.sorted
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
stateInitialsColumn <- 7
states <- sort(unique(data.sorted[,stateInitialsColumn]))
states
state_hospital_data <- function(state) {
slice <- subset(data.sorted, State==state)
slice <- slice[rank, c(2,7,index)]
slice$State <- state
return (slice)
}
state_data <- lapply(states, state_hospital_data)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
source("rankall.R")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
swirl()
library(swirl)
rm(list=ls())
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Gabriel")
my_name = c(my_char, "Gabriel")
my_name
pasta(my_name, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello, "world", sep = " "")
paste("Hello, "world", sep = " )
paste("Hello, "world", sep = " " )
paste("Hello", "world!", sep = " " )
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")

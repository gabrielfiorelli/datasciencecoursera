x <- 1
print(x)
x
runif()
runif(10)
x <- 1:4
lapply(x, runif)
lapply(x, runif, min = 0, max = 10)
> x <- list(a = 1:5, b = rnorm(10))
x <- list(a = 1:5, b = rnorm(10))
sapply(x, mean)
str(apply)
x <- matrix(rnorm(200)), 20, 10)
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
apply(x, 1, sum)
x
x <- matrix(rnorm(200, 1, 10))
x
x <- matrix(rnorm(200, 1, 10, 5))
x <- matrix(rnorm(200, 0, 10))
x
x <- matrix(rnorm(200, min = 0, max = 10))
x
x <- matrix(runf(200, min = 0, max = 10), 20, 10)
x <- matrix(runif(200, min = 0, max = 10), 20, 10)
x
x <- matrix(floor(runif(200, min = 0, max = 10)), 20, 10)
x
hist(x)
hist(x[, 1])
hist(x[1,])
apply(x, 1, quantile, probs = c(0.25, 0.75))
str(quantile)
args('quantile')
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapply(x, f, mean)
tapply(x, f, range)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
f <- gl(3, 10)
split(x, f)
lapply(split(x, f), mean)
library(datasets)
head(airquality)
airquality
library(datasets)
head(airquality)
datasets
?datasets
library(help = "datasets")
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
s
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x(, c("Ozone", "Solar.R", "Wind"))))
lapply(s, function(x) colMeans(x[], c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm=TRUE))
x <- rnorm(10)
f1 <- gl(2, 5)
f2 <- gl(5,2)
f1
f2
interactions(f1, f2)
interaction(f1, f2)
str(split(x, list(f1, f2)))
mean(z)
traceback()
debug(lm)
lm(y - x)
n
options(error = recover)
read.csv("lalala.csv")
library(datasets)
data("iris")
>iris
?iris
x <- data("iris")
x
x <- data(iris)
x
library(datasets)
iris <- data(iris)
iris
dnis <- dimnames(iris)
dnis
library(datasets)
iris <- data(iris)
head(iris)
library(datasets)
data(iris)
x <- data(iris)
q()
str(str)
source("cachematrix.T")
source("cachematrix.R")
str(lm)
str(source)
x <- rnorm(100, 2, 4)
summary(x)
str(x)
f <- gl(40, 20)
str(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
s <- split(airquality, airquality$Month)
str(s)
summary(s)
x <- rnorm(10, 2, 1)
x
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na])
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3. 5. 7)]
x[c(3. 5. 7)]
x[3]
k <- c(3, 5, 7)
x[k]
x[c(3, 5 ,7)]
X[0]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
getwd()
setwd("..\\")
getwd()
list.files()
list.dirs()
getwd()
setwd("datasciencecoursera\\")
getwd()
list.files()
setwd("Course03Week01\\")
list.files()
list.files("data\\")
read.csv("data\\cameras.csv")
cameras <- read.csv("data\\cameras.csv")
camerasTable <- read.table("data\\cameras.csv")
camerasTable <- read.table(file = "data\\cameras.csv")
camerasTable <- read.table(file = "data\\cameras.csv", sep = ",", header = TRUE)
head(camerasTable)
head(cameras)
getwd()
filexlsx <- read.xlsx("data\\DAU_First_15_Days.xlsx")
package(xlsx)
library(xlsx)
install.packages("xlsx")
installed.packages()
installed.packages("xlsx")
require("xlsx")
library(xlsx)
library("xlsx")
install.packages(xlsx)
install.packages("xlsx")
library("xlsx")
install.packages("rJava")
library("xlsx")
library(rJava)
library("rJava")
install.packages("XLConnect")
package(XLConnect)
library(XLConnect)
library("XLConnect"")
library("XLConnect)
library("XLConnect")
library(xml)
download.packages(xml)
install.packages(xml)
install.packages("xml")
install.packages("XML")
library(XML)
fileUrl <- "http://www.w3school.com/xml/simples.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- "https://www.w3schools.com/xml/simplexsl.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- "https://www.w3schools.com/xml/plant_catalog.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- "http://www.w3schools.com/xml/plant_catalog.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
doc <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
fileUrl <- "http://www.w3schools.com/xml/cd_catalog.xml"
doc <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
fileUrl <- "http://www.xmlfiles.com/examples/cd_catalog.xml"
doc <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
doc
install.packages("XML")
library(XML)
fileUrl <- "http://www.xmlfiles.com/examples/cd_catalog.xml"
doc <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
head(doc)
names(rootNode)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//name", xmlValue)
xpathSApply(rootNode, "//title", xmlValue)
xpathSApply(rootNode, "//TITLE", xmlValue)
fileUrl <- "http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternalNodes = TRUE)
score <- xpathSApply(doc, "//li[@class='score'", xmlValue)
score <- xpathSApply(doc, "//li[@class='team-name'", xmlValue)
score <- xpathSApply(doc, "//li[@class='team-name']", xmlValue)
score
score <- xpathSApply(doc, "//li[@class='score']", xmlValue)
teams <- xpathSApply(doc, "//li[@class='team-name']", xmlValue)
score
score <- xpathSApply(doc, "//li[@class='scores']", xmlValue)
score
score <- xpathSApply(doc, "//div[@class='score']", xmlValue)
score
##http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens
fileUrl <- "http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternalNodes = TRUE)
score <- xpathSApply(doc, "//div[@class='score']", xmlValue)
teams <- xpathSApply(doc, "//div[@class='game-info']", xmlValue)
score
teams
gameMeta xpathSApply(doc, "//div[@class='game-meta']", xmlValue)
gameMeta <- xpathSApply(doc, "//div[@class='game-meta']", xmlValue)
gameMeta
##https://api.github.com/users/gabrielfiorelli
library(jsonlite)
jsonData <- fromJSON("http://api.github.com/users/gabrielfiorelli")
names(jsonData)
names(jsonData$login)
names(jsonData$url)
names(jsonData$email)
jsonData
names(jsonData$name)
names(jsonData$name[1])
names(jsonData$name[0])
jsonData$name
jsonData <- fromJSON("http://api.github.com/users/gabrielfiorelli/repos")
jsonData
names(jsonData$owner)
myjson <- toJSON(iris, pretty = TRUE)
cat(myjson)
myjson <- toJSON(iris, pretty = TRUE)
iris2 <- fromJSON(myjson)
head(iris2)
library(data.table)
install.packages(data.table)
install.packages("data.table"")
install.packages("data.table")
install.packages("data.table")
library(data.table)
DF <- data.frame(x=rnorm(9), y=rep(c("a", "b", "c"), each=3), z=rnorm(9))
head(DF, 3)
DT <- data.table(x=rnorm(9), y=rep(c("a", "b", "c"), each=3), z=rnorm(9))
head(DT, 3)
tables()
DT[2, 0]
DT[2,]
DT[DT$y=="a",]
DT[c(2,3)]
k <- {print(10); 4}
k
k
DT[, list(mean(x), sum(z))]
DT[, table(y)]
table(iris)
table(DT)
Dt
DT
table(DT[, 2])
table(DT[, 3])
table(DT[, 1])
table(DT[, x])
table(DT[, y])
DT[,w:=z^2]
DT
DT[,m:= {tmp <- (x+z); log2(tmp+5)}]
DT
DT[, a:= x > 0]
DT
DT[, b:= mean(x+w), by=a]
DT
set.seed(123)
DT <- data.table(x=sample(letters[1:3], 1E5, TRUE))
DT[, .N, by=x]
DT <- data.table(x=rep(c("a", "b", "c"), each=100), y=rnorm(300))
setKey(DT, x)
setkey(DT, x)
DT['a']
DT1 <- data.table(x=c('a', 'a', 'b', 'dt1'), y=1:4)
DT2 <- data.table(x=c('a', 'b', 'dt2'), z=5:7)
setkey(DT1, x); setkey(DT2, x)
merge(DT1, DT2)
bid_df <- data.frame(x=rnorm(1E6), y=rnorm(1E6))
file < tempfile()
file <- tempfile()
write.table(big_df, file=file, row.names = FALSE, col.names = TRUE, sep = "\t", quote = FALSE)
write.table(bid_df, file=file, row.names = FALSE, col.names = TRUE, sep = "\t", quote = FALSE)
system.time(fread(file))
system.time(read.table(file, header = TRUE, sep = "\t"))
